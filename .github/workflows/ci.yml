name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
      - dev
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  # NB: sync with miri job's --exclude option
  EXCLUDE: --exclude futures-async-stream-internal-codegen

defaults:
  run:
    shell: bash --noprofile --norc -CeEuxo pipefail {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  check-external-types:
    uses: taiki-e/github-actions/.github/workflows/check-external-types.yml@main
  deny:
    uses: taiki-e/github-actions/.github/workflows/deny.yml@main
  docs:
    uses: taiki-e/github-actions/.github/workflows/docs.yml@main
  miri:
    uses: taiki-e/github-actions/.github/workflows/miri.yml@main
    with:
      event_name: ${{ github.event_name }}
      # NB: sync with env.EXCLUDE
      args: --exclude futures-async-stream-internal-codegen
  tidy:
    uses: taiki-e/github-actions/.github/workflows/tidy.yml@main
    permissions:
      contents: read
      pull-requests: write # for gh pr edit --add-assignee
      repository-projects: read # for gh pr edit --add-assignee
    secrets: inherit

  test:
    strategy:
      fail-fast: false
      matrix:
        rust:
          # This is the minimum supported Rust version of this crate.
          # When updating this, the reminder to update the minimum supported
          # Rust version in README.md and .clippy.toml.
          - nightly-2024-04-25
          - nightly
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: ${{ matrix.rust }}
          component: rust-src
          target: thumbv6m-none-eabi
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - uses: taiki-e/install-action@cargo-careful
        if: matrix.rust == 'nightly'
      - run: cargo test --workspace --all-features ${EXCLUDE} --tests --no-run
        if: matrix.rust != 'nightly'
      - run: cargo test --workspace --all-features ${EXCLUDE}
        if: matrix.rust == 'nightly'
      - run: cargo careful test --workspace --all-features ${EXCLUDE}
        env:
          RUSTDOCFLAGS: ${{ env.RUSTDOCFLAGS }} -Z randomize-layout
          RUSTFLAGS: ${{ env.RUSTFLAGS }} -Z randomize-layout
        if: matrix.rust == 'nightly'
      - run: cargo hack build --workspace --no-private --feature-powerset --no-dev-deps
      - run: cargo build --manifest-path tests/no-std/Cargo.toml --target thumbv6m-none-eabi
      - run: cargo minimal-versions build --workspace --no-private --detach-path-deps=skip-exact --all-features
      - run: cargo minimal-versions build --workspace --no-private --detach-path-deps=skip-exact --all-features --direct

  codegen:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: taiki-e/github-actions/install-rust@nightly
      - run: tools/gen.sh
      - run: git add -N . && git diff --exit-code
